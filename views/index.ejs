<!DOCTYPE html>
<html lang="fr">

<head>
  <meta charset="UTF-8">
  <!-- <meta http-equiv="refresh" content="2"> -->
  <meta name="theme-color" content="#293847">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

  <link rel="apple-touch-icon" sizes="180x180" href="/img/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/img/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/img/favicon-16x16.png">
  <link rel="manifest" href="/img/site.webmanifest">

  <!-- awesome cdn  -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

  <!-- box icon here  -->
  <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

  <!-- boostrap here -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">


  <!-- mon css here -->
  <link rel="stylesheet" href="/css/style.css">
  <title>Accueil</title>
</head>

<body id="body">

  <%- include('composants/nav.ejs') %>
  <%- include('composants/promo.ejs') %>
<div class="main">
  <%- include('composants/nav-desk.ejs') %>
  <%- include('composants/menu-list.ejs') %>
  <%- include('composants/affiche-block.ejs') %>

  <%- include('composants/burger-menu.ejs') %>
  <%- include('composants/panier.ejs') %>
  <%- include('composants/tab-bar.ejs') %>
  <%- include('composants/coupon.ejs') %> <br>


  <!-- mon slider visiter  -->
  <%- include('composants/slider-visiter.ejs') %>
  <!-- mon slider visiter  -->

  <!-- offres special -->
  <%- include('composants/offre-special.ejs') %> <br>
  <!-- offres special -->

  <br> <br> <br> <br>
  <!-- mon slider  telephones -->
  <%- include('composants/slider-telephones.ejs') %>
  <br>
  <!-- mon slider telephones -->

  <!-- multi card  -->
  <%- include('composants/multi-card.ejs') %>

  <!-- multi card  -->

  <!-- deux carte -->
  <%- include('composants/deux-card.ejs') %>
  <br>

  <!-- deux carte -->

  <!-- cool card -->
  <%- include('composants/pc-affiche.ejs') %>
  <br>
  <!-- cool card -->
  <!-- cool card -->
  <%- include('composants/cool-card.ejs') %>
  <br>
  <!-- cool card -->

  <br>
  <!-- grosse carte  -->
  <%- include('composants/grosse-card.ejs') %> <br>
  <!-- grosse cart -->
  <br>
  <!-- mode slider  -->
  <%- include('composants/slider-mode.ejs') %> <br>

  <!-- mode slider -->
  <br>
  <br>
  <!-- electro slider  -->
  <%- include('composants/slider-electro.ejs') %> <br>

  <!-- electro slider -->
  <br>

</div>

  <div class="app-pub">
    <button>L'APPLI Lafyshop</button> <br>
    <p style="text-align: center;">Hey , tu veux shopper
      easy ?</br>
      Retriuve des selecs creees juste pour toi</p>
    <br>
    <input type="submit" value="TELECHARGER MAINTENANT"><br>
  </div>
  <!-- FOOTER ICI  -->
  <%- include('composants/footer.ejs') %>
  <!-- FOOTER ICI  -->



  <!-- boostrap here -->

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

  <script src="/script/index.js"></script>

</body>
<script>

  function addToCart(button) {
    // R√©cup√®re les donn√©es du produit √† partir des attributs de donn√©es du bouton
    const productId = button.getAttribute('data-product-id');
    const productNom = button.getAttribute('data-product-nom');
    const productPrix = button.getAttribute('data-product-prix');
    const productUrl = button.getAttribute('data-product-url');
    const productInfo = button.getAttribute('data-product-info');

    // Construit un objet produit avec les donn√©es r√©cup√©r√©es
    const product = {
      Id: productId,
      name: productNom,
      price: productPrix,
      url: productUrl,
      info: productInfo,
      quantity: 1, // Ajoute la propri√©t√© de quantit√© avec une valeur initiale de 1
      // Ajoute d'autres propri√©t√©s selon tes besoins
    };

    // R√©cup√®re le tableau du localStorage ou initialise un nouveau tableau vide s'il n'existe pas
    let cart = JSON.parse(localStorage.getItem('lafyshop')) || [];

    // V√©rifie si le produit est d√©j√† dans le panier en fonction de son ID
    const existingProduct = cart.find(item => item.Id === productId);

    if (existingProduct) {
      // Si le produit existe, incr√©mente la quantit√©
      return alert('D√©j√† dans le panier !')
    } else {
      // Sinon, ajoute le produit avec une quantit√© initiale de 1
      cart.push(product);
    }

    // Met √† jour le localStorage avec le nouveau panier
    localStorage.setItem('lafyshop', JSON.stringify(cart));

    // Appelle la fonction pour mettre √† jour le panier
    updateCart();

    // Tu peux √©galement mettre √† jour l'interface utilisateur pour refl√©ter les changements dans le panier si n√©cessaire
    alert('Ajout√© au panier !');
    location.reload();
  }

  // Fonction pour retirer un produit du panier
//  function removeFromCart(productId) {
//  let cart = JSON.parse(localStorage.getItem('lafyshop')) || [];
//  cart = cart.filter(product => product.id !== productId); // Correction ici
//  localStorage.setItem('lafyshop', JSON.stringify(cart));
//  updateCart();
//  }

  function removeFromCart(productId) {
  // R√©cup√©rer le panier depuis le localStorage
  const cart = JSON.parse(localStorage.getItem('lafyshop')) || [];

  // Filtrer les produits pour exclure celui avec l'ID sp√©cifi√©
  const updatedCart = cart.filter(product => product.Id !== productId);

  // Mettre √† jour le localStorage avec le nouveau panier
  localStorage.setItem('lafyshop', JSON.stringify(updatedCart));

  // Appeler la fonction pour mettre √† jour le panier
  updateCart();
  }


  // Fonction pour mettre √† jour le contenu du panier
  function updateCart() {
    // R√©cup√©rer l'√©l√©ment du panier
    const panierElement = document.getElementById('monPanier');
        const panierFooter = document.getElementById('panier-footer');


    // R√©cup√©rer le panier depuis le localStorage
    const cart = JSON.parse(localStorage.getItem('lafyshop')) || [];

    // S√©lectionner l'√©l√©ment o√π vous souhaitez afficher les produits du panier
    const centerElement = panierElement.querySelector('.center');
    const footerTopElement = panierElement.querySelector('.footer-top');

    // Si le panier est vide, afficher un message appropri√©
    if (cart.length === 0) {
            panierFooter.style.display = 'none';

      centerElement.innerHTML = `
  <div class="panier-vide shadow-sm" onclick="accueil()">
    <h4>Votre panier est vide üõí</h4> <br>
    <p style="font-size: 0.7rem;">En manque d'inspiration ?</p>
    <button>Voir les meilleures offres</button>
  </div>
  `;
      footerTopElement.innerHTML = '';
    } else {
      // Si le panier n'est pas vide, construire le HTML pour chaque produit
      const cartHTML = cart.map(product => `
  <div class="produit-panier" style="padding: 10px; display: flex; border: 1px solid rgba(128, 128, 128, 0.173); margin: 10px;">
    <div class="img-box" style="width: 40%;">
      <img src="${product.url}" alt="${product.name}" width="70">
    </div>
    <div class="details-box" style="width: 60%;">
      <p><strong>${product.name}</strong></p>
      <p>${product.info}</p>
      <i style="color: rgb(7, 192, 7);" class='bx bx-check-circle'></i> <span>en stock</span>
      <p>Quantit√© : ${product.quantity}</p>
      <div style="display: flex; align-items: center; justify-content: space-between;">
        <p style="color: rgb(159, 9, 9);"><strong>${product.price} CFA</strong></p>
<i style="font-size: 1.3rem;" class='bx bx-trash' onclick="removeFromCart('${product.Id}')"></i>
      </div>
    </div>
  </div>
  `).join('');

      // Injecter le HTML dans l'√©l√©ment du panier
      centerElement.innerHTML = cartHTML;

      // Mettre √† jour le total et le nombre de produits
      const total = cart.reduce((acc, product) => {
        // Supprimer les espaces du prix et convertir en nombre
        const priceWithoutSpaces = parseFloat(product.price.replace(/\s/g, ''));
        return acc + priceWithoutSpaces * parseInt(product.quantity);
      }, 0);

      const totalQuantity = cart.reduce((acc, product) => acc + parseInt(product.quantity), 0);

      // Formater le total avec la fonction toLocaleString
      const formattedTotal = total.toLocaleString('fr-FR', {
        style: 'currency',
        currency: 'XOF'
      });

      // ...

      footerTopElement.innerHTML = `<span><strong>Total: ${formattedTotal}</strong></span> <span>Nombre: ${totalQuantity}</span>`;
    }

    // point_rouge
    localStorage.setItem('point_rouge', cart.length > 0 ? 'on' : 'off');
    pointRouge();
  }

  function pointRouge() {
    // point_rouge

    // R√©cup√©rez la valeur de la cl√© point_rouge du localStorage
    const pointRougeValue = localStorage.getItem('point_rouge');

    // R√©cup√©rez l'√©l√©ment point-rouge
    const pointRouge = document.querySelector('.point-rouge');

    // V√©rifiez la valeur et d√©finissez le style en cons√©quence
    if (pointRougeValue === 'on') {
      pointRouge.style.display = 'block';
    } else {
      pointRouge.style.display = 'none';
    }

    // point_rouge
  }

  // Appeler la fonction pour mettre √† jour le panier au chargement de la page
  updateCart();
</script>


</html>